{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kieut\\\\OneDrive\\\\Desktop\\\\Source\\\\FrontEnd\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport CartItem from \"../Component/CartItems/CartItem\";\nimport { useEffect } from \"react\";\nimport \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ProductCustomizationContext = /*#__PURE__*/createContext();\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [sortByPriceDescending, setSortByPriceDescending] = useState(false);\n  const [sortByPriceClicked, setSortByPriceClicked] = useState(false);\n  const [promoApplied, setPromoApplied] = useState(false);\n  const [discount, setDiscount] = useState(0);\n  const [selectedFace, setSelectedFace] = useState(null);\n  const [selectedStrap, setSelectedStrap] = useState(null);\n  const [selectedFaceForProducts, setSelectedFaceForProducts] = useState({});\n  const [selectedStrapForProducts, setSelectedStrapForProducts] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:4000/allproduct\").then(res => res.json()).then(data => {\n      setAll_Product(data);\n      if (localStorage.getItem(\"auth-token\")) {\n        fetch(\"http://localhost:4000/getcart\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/form-data\",\n            \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: \"\"\n        }).then(res => res.json()).then(data => setCartItems(data));\n      }\n    });\n  }, []);\n  const toggleSortByPriceDescending = () => {\n    setSortByPriceClicked(true);\n    setSortByPriceDescending(!sortByPriceDescending);\n  };\n  const updateSelectedFace = face => {\n    setSelectedFace(face);\n  };\n  const updateSelectedStrap = strap => {\n    setSelectedStrap(strap);\n  };\n  const sortedProducts = setSortByPriceClicked ? all_product.slice().sort((a, b) => {\n    if (sortByPriceDescending) {\n      return parseInt(b.new_price.replace(/[^\\d]/g, \"\")) - parseInt(a.new_price.replace(/[^\\d]/g, \"\"));\n    } else {\n      return parseInt(a.new_price.replace(/[^\\d]/g, \"\")) - parseInt(b.new_price.replace(/[^\\d]/g, \"\"));\n    }\n  }) : all_product;\n  useEffect(() => {\n    // Khôi phục dữ liệu từ localStorage khi ứng dụng khởi chạy\n    for (const itemId in cartItems) {\n      const storedSelectedFace = localStorage.getItem(`selectedFace_${itemId}`);\n      const storedSelectedStrap = localStorage.getItem(`selectedStrap_${itemId}`);\n      if (storedSelectedFace && storedSelectedStrap) {\n        setSelectedFaceForProducts(prev => ({\n          ...prev,\n          [itemId]: storedSelectedFace\n        }));\n        setSelectedStrapForProducts(prev => ({\n          ...prev,\n          [itemId]: storedSelectedStrap\n        }));\n      }\n    }\n  }, []);\n  const addToCart = (itemId, selectedFace, selectedStrap) => {\n    setSelectedFaceForProducts(prev => ({\n      ...prev,\n      [itemId]: selectedFace\n    }));\n    setSelectedStrapForProducts(prev => ({\n      ...prev,\n      [itemId]: selectedStrap\n    }));\n    localStorage.setItem(`selectedFace_${itemId}`, selectedFace);\n    localStorage.setItem(`selectedStrap_${itemId}`, selectedStrap);\n\n    // // Lưu selectedFace và selectedStrap vào localStorage\n    // localStorage.setItem(`selectedFace_${itemId}`, selectedFace);\n    // localStorage.setItem(`selectedStrap_${itemId}`, selectedStrap);\n\n    if (!localStorage.getItem(\"auth-token\")) {\n      alert(\"Bạn cần đăng nhập trước khi thêm sản phẩm vào giỏ hàng\");\n    } else {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] + 1\n      }));\n      // Lưu selectedFace và selectedStrap vào localStorage\n\n      const updatedCartItems = {\n        ...cartItems,\n        [itemId]: cartItems[itemId] + 1\n      };\n      if (localStorage.getItem(\"auth-token\")) {\n        fetch(\"http://localhost:4000/addToCart\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/form-data\",\n            \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            itemId: itemId,\n            selectedFace: selectedFace,\n            selectedStrap: selectedStrap\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    for (const itemId in cartItems) {\n      const storedSelectedFace = localStorage.getItem(`selectedFace_${itemId}`);\n      const storedSelectedStrap = localStorage.getItem(`selectedStrap_${itemId}`);\n      if (storedSelectedFace && storedSelectedStrap) {\n        setSelectedFaceForProducts(prev => ({\n          ...prev,\n          [itemId]: storedSelectedFace\n        }));\n        setSelectedStrapForProducts(prev => ({\n          ...prev,\n          [itemId]: storedSelectedStrap\n        }));\n      }\n    }\n  }, [cartItems]);\n  const removeFromCart = itemId => {\n    // Remove the item from localStorage\n    localStorage.removeItem(`selectedFace_${itemId}`);\n    localStorage.removeItem(`selectedStrap_${itemId}`);\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (cartItems[itemId] === 1) {\n      // Remove the item from state\n      setSelectedFaceForProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[itemId];\n        return updated;\n      });\n      setSelectedStrapForProducts(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[itemId];\n        return updated;\n      });\n    }\n\n    // Update the cartItems state\n    // setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n\n    // If user is logged in, update the cart on the server\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch(\"http://localhost:4000/removefromcart\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/form-data\",\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const applyPromo = async promoCode => {\n    await fetch(\"http://localhost:4000/checkpromocode\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        promoCode: promoCode\n      })\n    }).then(resp => resp.json()).then(async data => {\n      if (data.success) {\n        if (data.currentDate >= data.startDate && data.currentDate <= data.endDate) {\n          setPromoApplied(true);\n          setDiscount(data.discount);\n          alert(`Bạn được giảm: ${data.discount}%. Chúc quý khách trải nghiệm cảm giác mua sắm thật thú vị!`);\n        } else {\n          setPromoApplied(false);\n          alert(`Mã đã hết hạn hoặc đã được sử dụng. Hẹn gặp bạn trong các lần khuyến mãi sau!`);\n          setDiscount(0);\n        }\n      } else {\n        setPromoApplied(false);\n        alert(`Mã đã hết hạn hoặc đã được sử dụng. Hẹn gặp bạn trong các lần khuyến mãi sau!`);\n        setDiscount(0);\n      }\n    });\n  };\n  const getTotalCart = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInformation = all_product.find(product => product.id === Number(item));\n        let new_price = parseInt(itemInformation.new_price.replace(/[^\\d]/g, \"\"));\n        totalAmount = totalAmount + new_price * cartItems[item];\n      }\n    }\n    let showtotalAmount = totalAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    return showtotalAmount;\n  };\n  const getTotalItem = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem = totalItem + cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const getTotalCartPromote = () => {\n    let totalCart = parseInt(getTotalCart().replace(/[^\\d]/g, \"\"));\n    let totalCartPromotion = totalCart;\n    if (promoApplied) {\n      let discountAmount = totalCart * (parseInt(discount) / 100);\n      totalCartPromotion = totalCart - discountAmount;\n    }\n    let totalCartPromote = totalCartPromotion.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    return totalCartPromote;\n  };\n  const contextValue = {\n    getTotalItem,\n    getTotalCart,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    all_product: sortedProducts,\n    toggleSortByPriceDescending,\n    promoApplied,\n    applyPromo,\n    getTotalCartPromote,\n    selectedFace,\n    selectedStrap,\n    updateSelectedFace,\n    updateSelectedStrap,\n    selectedFaceForProducts,\n    selectedStrapForProducts,\n    discount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"ogi0dlpFaqqRS6oUeLA81Q3KSxQ=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","CartItem","useEffect","jsxDEV","_jsxDEV","ShopContext","ProductCustomizationContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","sortByPriceDescending","setSortByPriceDescending","sortByPriceClicked","setSortByPriceClicked","promoApplied","setPromoApplied","discount","setDiscount","selectedFace","setSelectedFace","selectedStrap","setSelectedStrap","selectedFaceForProducts","setSelectedFaceForProducts","selectedStrapForProducts","setSelectedStrapForProducts","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","body","toggleSortByPriceDescending","updateSelectedFace","face","updateSelectedStrap","strap","sortedProducts","slice","sort","a","b","parseInt","new_price","replace","itemId","storedSelectedFace","storedSelectedStrap","prev","addToCart","setItem","alert","updatedCartItems","JSON","stringify","console","log","removeFromCart","removeItem","updated","applyPromo","promoCode","resp","success","currentDate","startDate","endDate","getTotalCart","totalAmount","item","itemInformation","find","product","id","Number","showtotalAmount","toString","getTotalItem","totalItem","getTotalCartPromote","totalCart","totalCartPromotion","discountAmount","totalCartPromote","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kieut/OneDrive/Desktop/Source/FrontEnd/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport CartItem from \"../Component/CartItems/CartItem\";\r\nimport { useEffect } from \"react\";\r\nimport \"moment-timezone\";\r\n\r\nexport const ShopContext = createContext(null);\r\nconst ProductCustomizationContext = createContext();\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n  const [sortByPriceDescending, setSortByPriceDescending] = useState(false);\r\n  const [sortByPriceClicked, setSortByPriceClicked] = useState(false);\r\n  const [promoApplied, setPromoApplied] = useState(false);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [selectedFace, setSelectedFace] = useState(null);\r\n  const [selectedStrap, setSelectedStrap] = useState(null);\r\n  const [selectedFaceForProducts, setSelectedFaceForProducts] = useState({});\r\n  const [selectedStrapForProducts, setSelectedStrapForProducts] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/allproduct\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAll_Product(data);\r\n\r\n        if (localStorage.getItem(\"auth-token\")) {\r\n          fetch(\"http://localhost:4000/getcart\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/form-data\",\r\n              \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: \"\",\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => setCartItems(data));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const toggleSortByPriceDescending = () => {\r\n    setSortByPriceClicked(true);\r\n    setSortByPriceDescending(!sortByPriceDescending);\r\n  };\r\n\r\n  const updateSelectedFace = (face) => {\r\n    setSelectedFace(face);\r\n  };\r\n\r\n  const updateSelectedStrap = (strap) => {\r\n    setSelectedStrap(strap);\r\n  };\r\n\r\n  const sortedProducts = setSortByPriceClicked\r\n    ? all_product.slice().sort((a, b) => {\r\n        if (sortByPriceDescending) {\r\n          return (\r\n            parseInt(b.new_price.replace(/[^\\d]/g, \"\")) -\r\n            parseInt(a.new_price.replace(/[^\\d]/g, \"\"))\r\n          );\r\n        } else {\r\n          return (\r\n            parseInt(a.new_price.replace(/[^\\d]/g, \"\")) -\r\n            parseInt(b.new_price.replace(/[^\\d]/g, \"\"))\r\n          );\r\n        }\r\n      })\r\n    : all_product;\r\n\r\n  useEffect(() => {\r\n    // Khôi phục dữ liệu từ localStorage khi ứng dụng khởi chạy\r\n    for (const itemId in cartItems) {\r\n      const storedSelectedFace = localStorage.getItem(`selectedFace_${itemId}`);\r\n      const storedSelectedStrap = localStorage.getItem(\r\n        `selectedStrap_${itemId}`\r\n      );\r\n      if (storedSelectedFace && storedSelectedStrap) {\r\n        setSelectedFaceForProducts((prev) => ({\r\n          ...prev,\r\n          [itemId]: storedSelectedFace,\r\n        }));\r\n        setSelectedStrapForProducts((prev) => ({\r\n          ...prev,\r\n          [itemId]: storedSelectedStrap,\r\n        }));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const addToCart = (itemId, selectedFace, selectedStrap) => {\r\n    setSelectedFaceForProducts((prev) => ({ ...prev, [itemId]: selectedFace }));\r\n    setSelectedStrapForProducts((prev) => ({\r\n      ...prev,\r\n      [itemId]: selectedStrap,\r\n    }));\r\n\r\n    localStorage.setItem(`selectedFace_${itemId}`, selectedFace);\r\n    localStorage.setItem(`selectedStrap_${itemId}`, selectedStrap);\r\n\r\n    // // Lưu selectedFace và selectedStrap vào localStorage\r\n    // localStorage.setItem(`selectedFace_${itemId}`, selectedFace);\r\n    // localStorage.setItem(`selectedStrap_${itemId}`, selectedStrap);\r\n\r\n    if (!localStorage.getItem(\"auth-token\")) {\r\n      alert(\"Bạn cần đăng nhập trước khi thêm sản phẩm vào giỏ hàng\");\r\n    } else {\r\n      setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n      // Lưu selectedFace và selectedStrap vào localStorage\r\n\r\n      const updatedCartItems = {\r\n        ...cartItems,\r\n        [itemId]: cartItems[itemId] + 1,\r\n      };\r\n\r\n      if (localStorage.getItem(\"auth-token\")) {\r\n        fetch(\"http://localhost:4000/addToCart\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/form-data\",\r\n            \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            itemId: itemId,\r\n            selectedFace: selectedFace,\r\n            selectedStrap: selectedStrap,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (const itemId in cartItems) {\r\n      const storedSelectedFace = localStorage.getItem(`selectedFace_${itemId}`);\r\n      const storedSelectedStrap = localStorage.getItem(\r\n        `selectedStrap_${itemId}`\r\n      );\r\n      if (storedSelectedFace && storedSelectedStrap) {\r\n        setSelectedFaceForProducts((prev) => ({\r\n          ...prev,\r\n          [itemId]: storedSelectedFace,\r\n        }));\r\n        setSelectedStrapForProducts((prev) => ({\r\n          ...prev,\r\n          [itemId]: storedSelectedStrap,\r\n        }));\r\n      }\r\n    }\r\n  }, [cartItems]);\r\n\r\n  const removeFromCart = (itemId) => {\r\n    // Remove the item from localStorage\r\n    localStorage.removeItem(`selectedFace_${itemId}`);\r\n    localStorage.removeItem(`selectedStrap_${itemId}`);\r\n\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n\r\n    if (cartItems[itemId] === 1) {\r\n      // Remove the item from state\r\n      setSelectedFaceForProducts((prev) => {\r\n        const updated = { ...prev };\r\n        delete updated[itemId];\r\n        return updated;\r\n      });\r\n      setSelectedStrapForProducts((prev) => {\r\n        const updated = { ...prev };\r\n        delete updated[itemId];\r\n        return updated;\r\n      });\r\n    }\r\n\r\n    // Update the cartItems state\r\n    // setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n\r\n    // If user is logged in, update the cart on the server\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"http://localhost:4000/removefromcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/form-data\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const applyPromo = async (promoCode) => {\r\n    await fetch(\"http://localhost:4000/checkpromocode\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ promoCode: promoCode }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then(async (data) => {\r\n        if (data.success) {\r\n          if (\r\n            data.currentDate >= data.startDate &&\r\n            data.currentDate <= data.endDate\r\n          ) {\r\n            setPromoApplied(true);\r\n            setDiscount(data.discount);\r\n            alert(\r\n              `Bạn được giảm: ${data.discount}%. Chúc quý khách trải nghiệm cảm giác mua sắm thật thú vị!`\r\n            );\r\n          } else {\r\n            setPromoApplied(false);\r\n            alert(\r\n              `Mã đã hết hạn hoặc đã được sử dụng. Hẹn gặp bạn trong các lần khuyến mãi sau!`\r\n            );\r\n            setDiscount(0);\r\n          }\r\n        } else {\r\n          setPromoApplied(false);\r\n          alert(\r\n            `Mã đã hết hạn hoặc đã được sử dụng. Hẹn gặp bạn trong các lần khuyến mãi sau!`\r\n          );\r\n          setDiscount(0);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getTotalCart = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInformation = all_product.find(\r\n          (product) => product.id === Number(item)\r\n        );\r\n        let new_price = parseInt(\r\n          itemInformation.new_price.replace(/[^\\d]/g, \"\")\r\n        );\r\n        totalAmount = totalAmount + new_price * cartItems[item];\r\n      }\r\n    }\r\n    let showtotalAmount = totalAmount\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    return showtotalAmount;\r\n  };\r\n\r\n  const getTotalItem = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem = totalItem + cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const getTotalCartPromote = () => {\r\n    let totalCart = parseInt(getTotalCart().replace(/[^\\d]/g, \"\"));\r\n    let totalCartPromotion = totalCart;\r\n    if (promoApplied) {\r\n      let discountAmount = totalCart * (parseInt(discount) / 100);\r\n      totalCartPromotion = totalCart - discountAmount;\r\n    }\r\n    let totalCartPromote = totalCartPromotion\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    return totalCartPromote;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalItem,\r\n    getTotalCart,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    all_product: sortedProducts,\r\n    toggleSortByPriceDescending,\r\n    promoApplied,\r\n    applyPromo,\r\n    getTotalCartPromote,\r\n    selectedFace,\r\n    selectedStrap,\r\n    updateSelectedFace,\r\n    updateSelectedStrap,\r\n    selectedFaceForProducts,\r\n    selectedStrapForProducts,\r\n    discount,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAC9C,MAAMO,2BAA2B,gBAAGP,aAAa,CAAC,CAAC;AAEnD,MAAMQ,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,GAAG,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;IAC5CD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACjB;EACA,OAAOD,IAAI;AACb,CAAC;AAED,MAAME,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACO,cAAc,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACU,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC6B,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1E,MAAM,CAAC+B,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5EE,SAAS,CAAC,MAAM;IACd+B,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdvB,cAAc,CAACuB,IAAI,CAAC;MAEpB,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QACtCN,KAAK,CAAC,+BAA+B,EAAE;UACrCO,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,MAAM,EAAE,uBAAuB;YAC/B,YAAY,EAAG,GAAEJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,EAAC;YACrD,cAAc,EAAE;UAClB,CAAC;UACDI,IAAI,EAAE;QACR,CAAC,CAAC,CACCT,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKrB,YAAY,CAACqB,IAAI,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,2BAA2B,GAAGA,CAAA,KAAM;IACxCxB,qBAAqB,CAAC,IAAI,CAAC;IAC3BF,wBAAwB,CAAC,CAACD,qBAAqB,CAAC;EAClD,CAAC;EAED,MAAM4B,kBAAkB,GAAIC,IAAI,IAAK;IACnCpB,eAAe,CAACoB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrCpB,gBAAgB,CAACoB,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,cAAc,GAAG7B,qBAAqB,GACxCP,WAAW,CAACqC,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACjC,IAAIpC,qBAAqB,EAAE;MACzB,OACEqC,QAAQ,CAACD,CAAC,CAACE,SAAS,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,GAC3CF,QAAQ,CAACF,CAAC,CAACG,SAAS,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAE/C,CAAC,MAAM;MACL,OACEF,QAAQ,CAACF,CAAC,CAACG,SAAS,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,GAC3CF,QAAQ,CAACD,CAAC,CAACE,SAAS,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAE/C;EACF,CAAC,CAAC,GACF3C,WAAW;EAEfX,SAAS,CAAC,MAAM;IACd;IACA,KAAK,MAAMuD,MAAM,IAAI1C,SAAS,EAAE;MAC9B,MAAM2C,kBAAkB,GAAGpB,YAAY,CAACC,OAAO,CAAE,gBAAekB,MAAO,EAAC,CAAC;MACzE,MAAME,mBAAmB,GAAGrB,YAAY,CAACC,OAAO,CAC7C,iBAAgBkB,MAAO,EAC1B,CAAC;MACD,IAAIC,kBAAkB,IAAIC,mBAAmB,EAAE;QAC7C7B,0BAA0B,CAAE8B,IAAI,KAAM;UACpC,GAAGA,IAAI;UACP,CAACH,MAAM,GAAGC;QACZ,CAAC,CAAC,CAAC;QACH1B,2BAA2B,CAAE4B,IAAI,KAAM;UACrC,GAAGA,IAAI;UACP,CAACH,MAAM,GAAGE;QACZ,CAAC,CAAC,CAAC;MACL;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAGA,CAACJ,MAAM,EAAEhC,YAAY,EAAEE,aAAa,KAAK;IACzDG,0BAA0B,CAAE8B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,MAAM,GAAGhC;IAAa,CAAC,CAAC,CAAC;IAC3EO,2BAA2B,CAAE4B,IAAI,KAAM;MACrC,GAAGA,IAAI;MACP,CAACH,MAAM,GAAG9B;IACZ,CAAC,CAAC,CAAC;IAEHW,YAAY,CAACwB,OAAO,CAAE,gBAAeL,MAAO,EAAC,EAAEhC,YAAY,CAAC;IAC5Da,YAAY,CAACwB,OAAO,CAAE,iBAAgBL,MAAO,EAAC,EAAE9B,aAAa,CAAC;;IAE9D;IACA;IACA;;IAEA,IAAI,CAACW,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACvCwB,KAAK,CAAC,wDAAwD,CAAC;IACjE,CAAC,MAAM;MACL/C,YAAY,CAAE4C,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,MAAM,GAAGG,IAAI,CAACH,MAAM,CAAC,GAAG;MAAE,CAAC,CAAC,CAAC;MACjE;;MAEA,MAAMO,gBAAgB,GAAG;QACvB,GAAGjD,SAAS;QACZ,CAAC0C,MAAM,GAAG1C,SAAS,CAAC0C,MAAM,CAAC,GAAG;MAChC,CAAC;MAED,IAAInB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QACtCN,KAAK,CAAC,iCAAiC,EAAE;UACvCO,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,MAAM,EAAE,uBAAuB;YAC/B,YAAY,EAAG,GAAEJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,EAAC;YACrD,cAAc,EAAE;UAClB,CAAC;UACDI,IAAI,EAAEsB,IAAI,CAACC,SAAS,CAAC;YACnBT,MAAM,EAAEA,MAAM;YACdhC,YAAY,EAAEA,YAAY;YAC1BE,aAAa,EAAEA;UACjB,CAAC;QACH,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;UACd8B,OAAO,CAACC,GAAG,CAAC/B,IAAI,CAAC;QACnB,CAAC,CAAC;MACN;IACF;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACd,KAAK,MAAMuD,MAAM,IAAI1C,SAAS,EAAE;MAC9B,MAAM2C,kBAAkB,GAAGpB,YAAY,CAACC,OAAO,CAAE,gBAAekB,MAAO,EAAC,CAAC;MACzE,MAAME,mBAAmB,GAAGrB,YAAY,CAACC,OAAO,CAC7C,iBAAgBkB,MAAO,EAC1B,CAAC;MACD,IAAIC,kBAAkB,IAAIC,mBAAmB,EAAE;QAC7C7B,0BAA0B,CAAE8B,IAAI,KAAM;UACpC,GAAGA,IAAI;UACP,CAACH,MAAM,GAAGC;QACZ,CAAC,CAAC,CAAC;QACH1B,2BAA2B,CAAE4B,IAAI,KAAM;UACrC,GAAGA,IAAI;UACP,CAACH,MAAM,GAAGE;QACZ,CAAC,CAAC,CAAC;MACL;IACF;EACF,CAAC,EAAE,CAAC5C,SAAS,CAAC,CAAC;EAEf,MAAMsD,cAAc,GAAIZ,MAAM,IAAK;IACjC;IACAnB,YAAY,CAACgC,UAAU,CAAE,gBAAeb,MAAO,EAAC,CAAC;IACjDnB,YAAY,CAACgC,UAAU,CAAE,iBAAgBb,MAAO,EAAC,CAAC;IAElDzC,YAAY,CAAE4C,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,MAAM,GAAGG,IAAI,CAACH,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;IAEjE,IAAI1C,SAAS,CAAC0C,MAAM,CAAC,KAAK,CAAC,EAAE;MAC3B;MACA3B,0BAA0B,CAAE8B,IAAI,IAAK;QACnC,MAAMW,OAAO,GAAG;UAAE,GAAGX;QAAK,CAAC;QAC3B,OAAOW,OAAO,CAACd,MAAM,CAAC;QACtB,OAAOc,OAAO;MAChB,CAAC,CAAC;MACFvC,2BAA2B,CAAE4B,IAAI,IAAK;QACpC,MAAMW,OAAO,GAAG;UAAE,GAAGX;QAAK,CAAC;QAC3B,OAAOW,OAAO,CAACd,MAAM,CAAC;QACtB,OAAOc,OAAO;MAChB,CAAC,CAAC;IACJ;;IAEA;IACA;;IAEA;IACA,IAAIjC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACtCN,KAAK,CAAC,sCAAsC,EAAE;QAC5CO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,MAAM,EAAE,uBAAuB;UAC/B,YAAY,EAAG,GAAEJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,EAAC;UACrD,cAAc,EAAE;QAClB,CAAC;QACDI,IAAI,EAAEsB,IAAI,CAACC,SAAS,CAAC;UAAET,MAAM,EAAEA;QAAO,CAAC;MACzC,CAAC,CAAC,CACCvB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACd8B,OAAO,CAACC,GAAG,CAAC/B,IAAI,CAAC;MACnB,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMmC,UAAU,GAAG,MAAOC,SAAS,IAAK;IACtC,MAAMxC,KAAK,CAAC,sCAAsC,EAAE;MAClDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDE,IAAI,EAAEsB,IAAI,CAACC,SAAS,CAAC;QAAEO,SAAS,EAAEA;MAAU,CAAC;IAC/C,CAAC,CAAC,CACCvC,IAAI,CAAEwC,IAAI,IAAKA,IAAI,CAACtC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAC,MAAOG,IAAI,IAAK;MACpB,IAAIA,IAAI,CAACsC,OAAO,EAAE;QAChB,IACEtC,IAAI,CAACuC,WAAW,IAAIvC,IAAI,CAACwC,SAAS,IAClCxC,IAAI,CAACuC,WAAW,IAAIvC,IAAI,CAACyC,OAAO,EAChC;UACAxD,eAAe,CAAC,IAAI,CAAC;UACrBE,WAAW,CAACa,IAAI,CAACd,QAAQ,CAAC;UAC1BwC,KAAK,CACF,kBAAiB1B,IAAI,CAACd,QAAS,6DAClC,CAAC;QACH,CAAC,MAAM;UACLD,eAAe,CAAC,KAAK,CAAC;UACtByC,KAAK,CACF,+EACH,CAAC;UACDvC,WAAW,CAAC,CAAC,CAAC;QAChB;MACF,CAAC,MAAM;QACLF,eAAe,CAAC,KAAK,CAAC;QACtByC,KAAK,CACF,+EACH,CAAC;QACDvC,WAAW,CAAC,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMuD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,IAAI,IAAIlE,SAAS,EAAE;MAC5B,IAAIA,SAAS,CAACkE,IAAI,CAAC,GAAG,CAAC,EAAE;QACvB,IAAIC,eAAe,GAAGrE,WAAW,CAACsE,IAAI,CACnCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CACzC,CAAC;QACD,IAAI1B,SAAS,GAAGD,QAAQ,CACtB4B,eAAe,CAAC3B,SAAS,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAChD,CAAC;QACDwB,WAAW,GAAGA,WAAW,GAAGzB,SAAS,GAAGxC,SAAS,CAACkE,IAAI,CAAC;MACzD;IACF;IACA,IAAIM,eAAe,GAAGP,WAAW,CAC9BQ,QAAQ,CAAC,CAAC,CACVhC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;IACxC,OAAO+B,eAAe;EACxB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,SAAS,GAAG,CAAC;IACjB,KAAK,MAAMT,IAAI,IAAIlE,SAAS,EAAE;MAC5B,IAAIA,SAAS,CAACkE,IAAI,CAAC,GAAG,CAAC,EAAE;QACvBS,SAAS,GAAGA,SAAS,GAAG3E,SAAS,CAACkE,IAAI,CAAC;MACzC;IACF;IACA,OAAOS,SAAS;EAClB,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,SAAS,GAAGtC,QAAQ,CAACyB,YAAY,CAAC,CAAC,CAACvB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC9D,IAAIqC,kBAAkB,GAAGD,SAAS;IAClC,IAAIvE,YAAY,EAAE;MAChB,IAAIyE,cAAc,GAAGF,SAAS,IAAItC,QAAQ,CAAC/B,QAAQ,CAAC,GAAG,GAAG,CAAC;MAC3DsE,kBAAkB,GAAGD,SAAS,GAAGE,cAAc;IACjD;IACA,IAAIC,gBAAgB,GAAGF,kBAAkB,CACtCL,QAAQ,CAAC,CAAC,CACVhC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;IACxC,OAAOuC,gBAAgB;EACzB,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBP,YAAY;IACZV,YAAY;IACZlE,WAAW;IACXE,SAAS;IACT8C,SAAS;IACTQ,cAAc;IACdxD,WAAW,EAAEoC,cAAc;IAC3BL,2BAA2B;IAC3BvB,YAAY;IACZmD,UAAU;IACVmB,mBAAmB;IACnBlE,YAAY;IACZE,aAAa;IACbkB,kBAAkB;IAClBE,mBAAmB;IACnBlB,uBAAuB;IACvBE,wBAAwB;IACxBR;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAAC4F,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvCxF,KAAK,CAACwF;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC3F,EAAA,CAxSIF,mBAAmB;AAAA8F,EAAA,GAAnB9F,mBAAmB;AA0SzB,eAAeA,mBAAmB;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}